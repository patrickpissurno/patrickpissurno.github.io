{"version":3,"file":"component---src-pages-index-tsx-4139033eee662e31de6a.js","mappings":"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","sources":["webpack://francisco-araujo/./node_modules/camelcase/index.js","webpack://francisco-araujo/../src/image-utils.ts","webpack://francisco-araujo/../src/components/hooks.ts","webpack://francisco-araujo/../src/components/layout-wrapper.tsx","webpack://francisco-araujo/../src/components/picture.tsx","webpack://francisco-araujo/../src/components/placeholder.tsx","webpack://francisco-araujo/../src/components/main-image.tsx","webpack://francisco-araujo/../src/components/gatsby-image.server.tsx","webpack://francisco-araujo/../src/components/gatsby-image.browser.tsx","webpack://francisco-araujo/../src/components/static-image.server.tsx","webpack://francisco-araujo/../src/components/static-image.tsx","webpack://francisco-araujo/./node_modules/clsx/dist/clsx.mjs","webpack://francisco-araujo/./src/components/back-to-top/back-to-top.tsx","webpack://francisco-araujo/./src/components/company-logo/company-logo.tsx","webpack://francisco-araujo/./src/components/picture/picture.tsx","webpack://francisco-araujo/./src/components/tag/tag.tsx","webpack://francisco-araujo/./src/components/company-case/company-case.tsx","webpack://francisco-araujo/./src/components/link/link.tsx","webpack://francisco-araujo/./src/components/navbar/navbar.tsx","webpack://francisco-araujo/./src/hooks/use-intersection-observer.ts","webpack://francisco-araujo/./src/components/smart-video/smart-video.tsx","webpack://francisco-araujo/./src/consts/links.ts","webpack://francisco-araujo/./src/images/cases/amazon/3-desktop.mp4","webpack://francisco-araujo/./src/images/cases/amazon/3.mp4","webpack://francisco-araujo/./src/images/cases/amazon/4-desktop.mp4","webpack://francisco-araujo/./src/images/cases/amazon/4.mp4","webpack://francisco-araujo/./src/images/cases/better/2-desktop.mp4","webpack://francisco-araujo/./src/images/cases/better/2.mp4","webpack://francisco-araujo/./src/images/cases/heron/3-desktop.mp4","webpack://francisco-araujo/./src/images/cases/heron/3.mp4","webpack://francisco-araujo/./src/pages/index.tsx","webpack://francisco-araujo/./src/helpers/rem-to-px.ts"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","export type BackToTopProps = {\n  children?: never;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const BackToTop = ({ children }: BackToTopProps) => {\n  return (\n    <div className=\"relative\">\n      <button\n        type=\"button\"\n        className=\"absolute p-0 m-0 bottom-[0.5rem] border-none bg-none font-medium cursor-pointer max-md:hidden\"\n        onClick={() =>\n          document.scrollingElement?.scrollTo({ top: 0, behavior: 'smooth' })\n        }\n      >\n        Back to top\n      </button>\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport type { HTMLProps } from 'react';\n\nexport type CompanyLogoProps = HTMLProps<HTMLDivElement>;\nexport const CompanyLogo = ({ className, ...props }: CompanyLogoProps) => {\n  return (\n    <div\n      className={clsx(\n        className,\n        'rounded-[0.25rem] overflow-hidden bg-[#191919] w-[2rem] h-[2rem]'\n      )}\n      {...props}\n    />\n  );\n};\n","import clsx from 'clsx';\nimport type { HTMLProps } from 'react';\n\nexport type PictureProps = HTMLProps<HTMLDivElement>;\nexport const Picture = ({ className, ...props }: PictureProps) => {\n  return (\n    <div\n      className={clsx(\n        className,\n        'rounded-[0.5rem] overflow-hidden bg-[#323232]'\n      )}\n      {...props}\n    />\n  );\n};\n","import clsx from 'clsx';\nimport type { HTMLProps } from 'react';\n\nexport type TagProps = HTMLProps<HTMLDivElement>;\n\nexport const Tag = ({ className, ...props }: TagProps) => {\n  return (\n    <div\n      className={clsx(\n        className,\n        'px-[0.5625rem] py-[0.3125rem] rounded-[0.25rem] overflow-hidden bg-[#191919]'\n      )}\n      {...props}\n    />\n  );\n};\n","import clsx from 'clsx';\nimport type { HTMLProps, ReactNode } from 'react';\nimport { CompanyLogo } from '../company-logo';\nimport { Picture } from '../picture';\nimport { Tag } from '../tag';\n\nexport type CompanyCaseData = {\n  name: string;\n  description: ReactNode;\n  role: ReactNode;\n  logo: ReactNode;\n  tags: ReactNode[];\n  pictures: ReactNode[];\n};\n\nexport type CompanyCaseProps = Omit<\n  HTMLProps<HTMLDivElement>,\n  'children' | 'data'\n> & {\n  data: CompanyCaseData;\n};\n\nexport const CompanyCase = ({\n  className,\n  data: { name, logo, description, role, tags, pictures },\n  ...props\n}: CompanyCaseProps) => {\n  return (\n    <section className={clsx(className, 'md:grid md:grid-cols-23')} {...props}>\n      <div className=\"md:col-span-5 md:sticky md:top-[6.25rem] md:self-start\">\n        <div className=\"flex items-center gap-[0.75rem] mb-[1rem]\">\n          <CompanyLogo>{logo}</CompanyLogo>\n          <h2 className=\"font-medium\">{name}</h2>\n        </div>\n        <p className=\"mb-[0.75rem] leading-[140%]\">\n          <span>About:</span>\n          <span className=\"text-[#ababab]\">{' ' + description}</span>\n        </p>\n        <p className=\"mb-[1rem] leading-[140%]\">\n          <span>My role</span>\n          <span className=\"text-[#ababab]\">{' ' + role}</span>\n        </p>\n        <div className=\"flex flex-wrap gap-[0.25rem] mb-[2.5rem]\">\n          {tags.map((tag, i) => (\n            <Tag key={`tag-${i}`}>{tag}</Tag>\n          ))}\n        </div>\n      </div>\n      <div className=\"grid grid-cols-1 auto-rows-fr gap-[0.625rem] md:col-start-7 md:col-span-17 md:grid-cols-2\">\n        {pictures.map((pic, i) => (\n          <Picture\n            key={`pic-${i}`}\n            className={clsx(i % 3 === 0 && 'md:col-span-2')}\n          >\n            {pic}\n          </Picture>\n        ))}\n      </div>\n    </section>\n  );\n};\n","import clsx from 'clsx';\nimport type { HTMLProps } from 'react';\n\nexport type LinkProps = HTMLProps<HTMLAnchorElement>;\n\nexport const Link = ({ className, ...props }: LinkProps) => {\n  return (\n    <a\n      className={clsx(className, 'underline font-medium cursor-pointer')}\n      {...props}\n    />\n  );\n};\n","import clsx from 'clsx';\nimport { Link } from '../link';\n\nconst MAX_LINKS_XS = 2;\n\nexport type NavbarProps = {\n  links: { href: string; text: string }[];\n  className?: string;\n};\n\nexport const Navbar = ({ links, className }: NavbarProps) => {\n  return (\n    <header\n      className={clsx(\n        className,\n        'h-[3.75rem] p-[1.25rem] backdrop-blur-[10px] bg-black/70 flex justify-end fixed top-0 left-0 w-full z-40 text-[0.875rem] md:px-[2.5rem]'\n      )}\n      aria-label=\"Navigation bar\"\n    >\n      <nav className=\"flex gap-[1.25rem]\">\n        {links.map(({ text, href }, i) => (\n          <Link\n            key={text}\n            href={href}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            className={clsx(i >= MAX_LINKS_XS && 'max-md:hidden')}\n          >\n            {text}\n          </Link>\n        ))}\n      </nav>\n    </header>\n  );\n};\n","import { useEffect } from 'react';\n\nexport type UseIntersectionObserverProps<E extends HTMLElement> = {\n  refs: React.RefObject<E>[];\n  callback: (\n    entries: IntersectionObserverEntryNarrow<E>[],\n    observer: IntersectionObserver\n  ) => void;\n  options?: IntersectionObserverInit;\n};\n\nexport type IntersectionObserverEntryNarrow<E extends HTMLElement> = Omit<\n  IntersectionObserverEntry,\n  'target'\n> & {\n  target: E;\n};\n\nexport function useIntersectionObserver<E extends HTMLElement>({\n  refs,\n  options,\n  callback,\n}: UseIntersectionObserverProps<E>) {\n  useEffect(() => {\n    const els = refs.filter((ref) => ref.current);\n    if (els.length < 1) return;\n\n    const observer = new IntersectionObserver(callback as never, options);\n\n    for (const el of els) {\n      if (el.current) observer.observe(el.current);\n    }\n\n    return () => observer.disconnect();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [callback, options]);\n}\n","import clsx from 'clsx';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport type { HTMLProps } from 'react';\nimport type { IntersectionObserverEntryNarrow } from '../../hooks/use-intersection-observer';\nimport { useIntersectionObserver } from '../../hooks/use-intersection-observer';\n\nconst desktop = 1024;\n\nexport type SmartVideoProps = Omit<\n  HTMLProps<HTMLVideoElement>,\n  | 'src'\n  | 'srcDoc'\n  | 'srcLang'\n  | 'srcSet'\n  | 'ref'\n  | 'loop'\n  | 'muted'\n  | 'disablePictureInPicture'\n  | 'playsInline'\n  | 'poster'\n> & {\n  eager?: boolean;\n  srcMobile?: string;\n  srcDesktop?: string;\n};\n\nexport const SmartVideo = ({\n  eager,\n  srcMobile,\n  srcDesktop,\n  children,\n  className,\n  ...props\n}: SmartVideoProps) => {\n  const ref = useRef<HTMLVideoElement>(null);\n  const [shouldLoad, setShouldLoad] = useState(eager);\n\n  // hide the video element while loading\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n\n    el.style.opacity = '0';\n    const handler = () => {\n      if (el.readyState >= 2) el.style.opacity = '1';\n    };\n\n    el.addEventListener('canplay', handler);\n    return () => {\n      el.removeEventListener('canplay', handler);\n    };\n  }, []);\n\n  useIntersectionObserver({\n    refs: [ref],\n    options: useMemo(() => ({ rootMargin: '0% 0% 25% 0%' }), []),\n    callback: useCallback(\n      ([el]: IntersectionObserverEntryNarrow<HTMLVideoElement>[]) => {\n        setShouldLoad((old) => old || el.intersectionRatio > 0);\n      },\n      []\n    ),\n  });\n\n  useIntersectionObserver({\n    refs: [ref],\n    callback: useCallback(\n      ([el]: IntersectionObserverEntryNarrow<HTMLVideoElement>[]) => {\n        const onScreen = el.intersectionRatio > 0;\n\n        try {\n          if (onScreen && el.target.paused) el.target.play().catch(() => {});\n          else if (!onScreen && !el.target.paused) el.target.pause();\n        } catch {\n          /* empty */\n        }\n      },\n      []\n    ),\n  });\n\n  const src = useMemo(\n    () =>\n      srcMobile && srcDesktop && srcMobile !== srcDesktop ? (\n        <>\n          <source src={srcMobile} media={`(max-width: ${desktop}px)`} />\n          <source src={srcDesktop} media={`(min-width: ${desktop}px)`} />\n        </>\n      ) : (\n        <source src={srcMobile ?? srcDesktop} />\n      ),\n    [srcDesktop, srcMobile]\n  );\n\n  return (\n    <div className=\"w-full h-full relative\">\n      {children}\n      <video\n        {...props}\n        className={clsx(className, 'relative')}\n        ref={ref}\n        loop\n        muted\n        disablePictureInPicture\n        playsInline\n        draggable=\"false\"\n      >\n        {shouldLoad && src}\n      </video>\n    </div>\n  );\n};\n","export type Href = {\n  text: string;\n  href: string;\n  target?: '_blank';\n};\n\nexport const links: Href[] = [\n  {\n    text: 'LinkedIn',\n    href: 'https://www.linkedin.com/in/araujochico/',\n    target: '_blank',\n  },\n  { text: 'Email', href: 'mailto:chicoaraujo1@gmail.com' },\n  { text: 'Read.cv', href: 'https://read.cv/chicoaraujo' },\n];\n","export default __webpack_public_path__ + \"static/3-desktop-2ce4bc3a7a192a29b02543c954a628b4.mp4\";","export default __webpack_public_path__ + \"static/3-3621ca91e7528c9b204ed9f0b512b535.mp4\";","export default __webpack_public_path__ + \"static/4-desktop-4c0067bd1e66bc1693a680c106959f6d.mp4\";","export default __webpack_public_path__ + \"static/4-a5e10bd210852f48e3ea3298916e7b55.mp4\";","export default __webpack_public_path__ + \"static/2-desktop-817cb26e2af1e1f66727377fa8741f9a.mp4\";","export default __webpack_public_path__ + \"static/2-30006f9abec25cc68f82a23b5384e1bf.mp4\";","export default __webpack_public_path__ + \"static/3-desktop-f57dc10f2ca8cfa7ba59e9016102ad4e.mp4\";","export default __webpack_public_path__ + \"static/3-e5d354fe1e970b0a06f6de854dca9926.mp4\";","import clsx from 'clsx';\nimport type { HeadFC } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { Fragment, useCallback, useMemo, useRef, useState } from 'react';\nimport { BackToTop } from '../components/back-to-top';\nimport type { CompanyCaseData } from '../components/company-case';\nimport { CompanyCase } from '../components/company-case';\nimport { Link } from '../components/link';\nimport { Navbar } from '../components/navbar';\nimport { SmartVideo } from '../components/smart-video';\nimport { links } from '../consts/links';\nimport { remToPx } from '../helpers/rem-to-px';\nimport type { IntersectionObserverEntryNarrow } from '../hooks/use-intersection-observer';\nimport { useIntersectionObserver } from '../hooks/use-intersection-observer';\nimport amazon3Desktop from '../images/cases/amazon/3-desktop.mp4';\nimport amazon3 from '../images/cases/amazon/3.mp4';\nimport amazon4Desktop from '../images/cases/amazon/4-desktop.mp4';\nimport amazon4 from '../images/cases/amazon/4.mp4';\nimport better2Desktop from '../images/cases/better/2-desktop.mp4';\nimport better2 from '../images/cases/better/2.mp4';\nimport heron3Desktop from '../images/cases/heron/3-desktop.mp4';\nimport heron3 from '../images/cases/heron/3.mp4';\n\nconst cases = [\n  {\n    name: `Heron Finance`,\n    description: `Heron is the first robo-advisor exclusively focused on private credit.`,\n    role: `as Senior designer was to build the product from 0-1. From product to marketing, I helped establishing the first versions of Heron.`,\n    tags: ['Product', 'Marketing', 'Brand', 'User Research', 'Design System'],\n    logo: (\n      <StaticImage\n        draggable=\"false\"\n        src=\"../images/logos/heron.png\"\n        width={32}\n        height={32}\n        alt=\"Heron Finance logo\"\n        layout=\"fixed\"\n        loading=\"eager\"\n      />\n    ),\n    pictures: [\n      <Fragment key=\"heron-1\">\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/heron/1.png\"\n          alt=\"Grid of images related to Heron project. Includes Logo, pie chart, illustrations, bar charts and portfolio view.\"\n          layout=\"fullWidth\"\n          className=\"md:hidden h-full\"\n        />\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/heron/1-desktop.png\"\n          alt=\"Grid of images related to Heron project. Includes Logo, pie chart, illustrations, bar charts and portfolio view.\"\n          layout=\"fullWidth\"\n          className=\"max-md:hidden h-full\"\n        />\n      </Fragment>,\n      <Fragment key=\"heron-2\">\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/heron/2.png\"\n          alt=\"iPhone mock up with Heron's marketing website first scroll.\"\n          layout=\"fullWidth\"\n          className=\"md:hidden h-full\"\n        />\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/heron/2-desktop.png\"\n          alt=\"iPhone mock up with Heron's marketing website first scroll.\"\n          layout=\"fullWidth\"\n          className=\"max-md:hidden h-full\"\n        />\n      </Fragment>,\n      <Fragment key=\"heron-3\">\n        <SmartVideo\n          aria-label=\"Heron strategy cards changing from Standard to Aggressive.\"\n          className=\"w-0 h-0 min-w-full min-h-full object-cover\"\n          srcMobile={heron3}\n          srcDesktop={heron3Desktop}\n        >\n          <StaticImage\n            draggable=\"false\"\n            src=\"../images/cases/heron/3.png\"\n            layout=\"fullWidth\"\n            alt=\"\"\n            aria-hidden\n            className=\"md:hidden absolute w-0 h-0 min-w-full min-h-full\"\n          />\n          <StaticImage\n            draggable=\"false\"\n            src=\"../images/cases/heron/3-desktop.png\"\n            layout=\"fullWidth\"\n            alt=\"\"\n            aria-hidden\n            className=\"max-md:hidden absolute w-0 h-0 min-w-full min-h-full\"\n          />\n        </SmartVideo>\n      </Fragment>,\n    ],\n  },\n  {\n    name: `Amazon`,\n    description: `Physical meets digital at Amazon's customer experience on Best Buy stores.`,\n    role: `as Senior designer was to create a delightful customer experience mixing physical fixtures and digital experiences that allow users to test and engage with Amazon's products.`,\n    tags: ['Product', 'Prototypes', 'Visual Design', 'UX', 'Motion'],\n    logo: (\n      <StaticImage\n        draggable=\"false\"\n        src=\"../images/logos/amazon.png\"\n        width={32}\n        height={32}\n        alt=\"Amazon logo\"\n        layout=\"fixed\"\n      />\n    ),\n    pictures: [\n      <Fragment key=\"amazon-1\">\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/amazon/1.png\"\n          alt=\"Amazon's EchoShow 10 interface created for the product experience in store.\"\n          layout=\"fullWidth\"\n          className=\"md:hidden h-full\"\n        />\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/amazon/1-desktop.png\"\n          alt=\"Amazon's EchoShow 10 interface created for the product experience in store.\"\n          layout=\"fullWidth\"\n          className=\"max-md:hidden h-full\"\n        />\n      </Fragment>,\n      <Fragment key=\"amazon-2\">\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/amazon/2.png\"\n          alt=\"3D mock of a Amazon store fixture, including products, canvas and interactive panel.\"\n          layout=\"fullWidth\"\n          className=\"md:hidden h-full\"\n        />\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/amazon/2-desktop.png\"\n          alt=\"3D mock of a Amazon store fixture, including products, canvas and interactive panel.\"\n          layout=\"fullWidth\"\n          className=\"max-md:hidden h-full\"\n        />\n      </Fragment>,\n      <Fragment key=\"amazon-3\">\n        <SmartVideo\n          aria-label=\"Amazon's Echoshows\"\n          className=\"w-0 h-0 min-w-full min-h-full object-cover\"\n          srcMobile={amazon3}\n          srcDesktop={amazon3Desktop}\n        >\n          <StaticImage\n            draggable=\"false\"\n            src=\"../images/cases/amazon/3.png\"\n            layout=\"fullWidth\"\n            alt=\"\"\n            aria-hidden\n            className=\"md:hidden absolute w-0 h-0 min-w-full min-h-full\"\n          />\n          <StaticImage\n            draggable=\"false\"\n            src=\"../images/cases/amazon/3-desktop.png\"\n            layout=\"fullWidth\"\n            alt=\"\"\n            aria-hidden\n            className=\"max-md:hidden absolute w-0 h-0 min-w-full min-h-full\"\n          />\n        </SmartVideo>\n      </Fragment>,\n      <Fragment key=\"amazon-4\">\n        <SmartVideo\n          aria-label={`Video with a demo of showing what happens when user clicks on \"Tell me more about EchoShow 10\".`}\n          className=\"w-0 h-0 min-w-full min-h-full object-cover\"\n          srcMobile={amazon4}\n          srcDesktop={amazon4Desktop}\n        >\n          <StaticImage\n            draggable=\"false\"\n            src=\"../images/cases/amazon/4.png\"\n            layout=\"fullWidth\"\n            alt=\"\"\n            aria-hidden\n            className=\"md:hidden absolute w-0 h-0 min-w-full min-h-full\"\n          />\n          <StaticImage\n            draggable=\"false\"\n            src=\"../images/cases/amazon/4-desktop.png\"\n            layout=\"fullWidth\"\n            alt=\"\"\n            aria-hidden\n            className=\"max-md:hidden absolute w-0 h-0 min-w-full min-h-full\"\n          />\n        </SmartVideo>\n      </Fragment>,\n    ],\n  },\n  {\n    name: `Better.com`,\n    description: `Established Better.com first design system.`,\n    role: `as Senior designer was to build a robust design system from 0-1 while helping to solve product challenges.`,\n    tags: [\n      'Design System',\n      'Product',\n      'Prototypes',\n      'Visual Design',\n      'UX',\n      'Motion',\n    ],\n    logo: (\n      <StaticImage\n        draggable=\"false\"\n        src=\"../images/logos/better.png\"\n        width={32}\n        height={32}\n        alt=\"Better.com logo\"\n        layout=\"fixed\"\n      />\n    ),\n    pictures: [\n      <Fragment key=\"better-1\">\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/better/1.png\"\n          alt=\"Screen of housing listing and map.\"\n          layout=\"fullWidth\"\n          className=\"md:hidden h-full\"\n        />\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/better/1-desktop.png\"\n          alt=\"Screen of housing listing and map.\"\n          layout=\"fullWidth\"\n          className=\"max-md:hidden h-full\"\n        />\n      </Fragment>,\n      <Fragment key=\"better-2\">\n        <SmartVideo\n          aria-label=\"Video showing parts of the design system created for Better.com.\"\n          className=\"w-0 h-0 min-w-full min-h-full object-cover\"\n          srcMobile={better2}\n          srcDesktop={better2Desktop}\n        >\n          <StaticImage\n            draggable=\"false\"\n            src=\"../images/cases/better/2.png\"\n            layout=\"fullWidth\"\n            alt=\"\"\n            aria-hidden\n            className=\"md:hidden absolute w-0 h-0 min-w-full min-h-full\"\n          />\n          <StaticImage\n            draggable=\"false\"\n            src=\"../images/cases/better/2-desktop.png\"\n            layout=\"fullWidth\"\n            alt=\"\"\n            aria-hidden\n            className=\"max-md:hidden absolute w-0 h-0 min-w-full min-h-full\"\n          />\n        </SmartVideo>\n      </Fragment>,\n      <Fragment key=\"better-3\">\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/better/3.png\"\n          alt=\"Example of element spaces created for Better.com's design system.\"\n          layout=\"fullWidth\"\n          className=\"md:hidden h-full\"\n        />\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/better/3-desktop.png\"\n          alt=\"Example of element spaces created for Better.com's design system.\"\n          layout=\"fullWidth\"\n          className=\"max-md:hidden h-full\"\n        />\n      </Fragment>,\n      <Fragment key=\"better-4\">\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/better/4.png\"\n          alt=\"Example of how color tokens were applied to Better.com's desktop and mobile screens.\"\n          layout=\"fullWidth\"\n          className=\"md:hidden h-full\"\n        />\n        <StaticImage\n          draggable=\"false\"\n          src=\"../images/cases/better/4-desktop.png\"\n          alt=\"Example of how color tokens were applied to Better.com's desktop and mobile screens.\"\n          layout=\"fullWidth\"\n          className=\"max-md:hidden h-full\"\n        />\n      </Fragment>,\n    ],\n  },\n] satisfies CompanyCaseData[];\n\nexport default function IndexPage() {\n  const [navbar, setNavbar] = useState(false);\n  const titleSectionRef = useRef<HTMLDivElement>(null);\n\n  useIntersectionObserver({\n    refs: [titleSectionRef],\n    options: useMemo(\n      () => ({\n        threshold: [1],\n        rootMargin: `-${remToPx(1.5) + 1}px 0px 0px 0px`,\n      }),\n      []\n    ),\n    callback: useCallback(\n      ([el]: IntersectionObserverEntryNarrow<HTMLDivElement>[]) =>\n        setNavbar(el.intersectionRatio < 1),\n      []\n    ),\n  });\n\n  return (\n    <>\n      <Navbar links={links} className={clsx(!navbar && 'hidden')} />\n      <main className=\"pt-[10rem] pb-[1.25rem] px-[1.25rem] text-[0.875rem] md:px-[2.5rem] md:pt-[13.75rem] md:pb-[2rem]\">\n        <h1\n          ref={titleSectionRef}\n          className=\"sticky top-[1.25rem] z-40 mb-[0.75rem] leading-[140%] font-medium md:mb-0 md:h-0\"\n        >\n          Chico Araujo\n        </h1>\n        <section className=\"pb-[3.75rem] md:grid md:grid-cols-23 md:pb-[10rem]\">\n          <div className=\"md:col-start-7 md:col-span-12\">\n            <p className=\"mb-[0.75rem] font-display text-[2rem] leading-[120%] md:text-[4.25rem] md:leading-[110%] md:mb-[1.25rem]\">\n              Hands-on designer with over 10 years of experience creating\n              digital products.\n            </p>\n            <p className=\"text-[#ababab] leading-[160%] mb-[2.5rem] md:mb-[1.25rem]\">\n              <span className=\"text-white\">Currently</span> at Heron.{' '}\n              <span className=\"text-white\">Previously </span> at {` Work&Co `}\n              and Huge where I had the opportunity to work for companies like\n              Apple, Amazon, Goldman Sachs, Mailchimp, Meta, Twitter and many\n              more.\n            </p>\n            <ul className=\"flex gap-[1.25rem] leading-[140%]\">\n              {links.map(({ text, href, target }) => (\n                <li key={text}>\n                  <Link href={href} target={target} rel=\"noreferrer noopener\">\n                    {text}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n\n        {cases.map((c) => (\n          <CompanyCase key={c.name} data={c} className=\"mt-[6.25rem]\" />\n        ))}\n\n        <BackToTop />\n      </main>\n    </>\n  );\n}\n\nexport const Head: HeadFC = () => <title>Chico Araujo</title>;\n","export function remToPx(rem: number) {\n  if (typeof document === 'undefined') return 16 * rem;\n  return parseFloat(getComputedStyle(document.documentElement).fontSize) * rem;\n}\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","hasNativeLazyLoadSupport","HTMLImageElement","prototype","srcSet","width","height","layout","wrapperStyle","className","style","getMainProps","isLoading","isLoaded","images","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","_ref","children","props","_objectWithoutPropertiesLoose","Fragment","Image","decoding","Picture","_ref2","fallback","sources","sizes","media","type","key","fallbackImage","propTypes","PropTypes","isRequired","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","number","validLayouts","GatsbyImageBrowser","r","e","t","f","n","o","arguments","BackToTop","_jsx","onClick","document","scrollingElement","_document$scrollingEl","scrollTo","behavior","CompanyLogo","clsx","Tag","CompanyCase","data","name","logo","description","tags","pictures","_jsxs","tag","pic","Link","Navbar","links","text","href","target","rel","useIntersectionObserver","refs","callback","els","observer","IntersectionObserver","el","observe","disconnect","SmartVideo","eager","srcMobile","srcDesktop","setShouldLoad","useState","handler","readyState","rootMargin","useCallback","old","intersectionRatio","_ref3","onScreen","paused","play","catch","pause","loop","muted","disablePictureInPicture","playsInline","draggable","cases","heron3","heron3Desktop","amazon3","amazon3Desktop","amazon4","amazon4Desktop","better2","better2Desktop","IndexPage","navbar","setNavbar","titleSectionRef","threshold","rem","parseFloat","getComputedStyle","documentElement","fontSize","c","Head"],"sourceRoot":""}